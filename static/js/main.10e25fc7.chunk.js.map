{"version":3,"sources":["components/appHeader/AppHeader.js","resources/img/mjolnir.png","services/MarvelService.js","components/spinner/loading.gif","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","resources/img/abyss.jpg","components/skeleton/Skeleton.js","resources/img/thor.jpeg","components/charInfo/CharInfo.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/app/App.js","index.js"],"names":["AppHeader","className","href","MarvelService","_apiBase","_apiKey","_baseOffsetCharacters","_totalCgaracters","getResoureceByUrl","url","a","fetch","resourse","ok","Error","status","json","getCharacters","offset","res","data","results","map","_transformCharacterResourse","getCharacterById","id","character","name","description","thumbnail","path","extension","homeoage","urls","wiki","comics","items","Spinner","style","inlineStyles","src","ErrorMessage","img","alt","RandomChar","props","marvelServices","onCharacterLoaded","setState","loading","onError","error","updateCharecter","Math","floor","random","then","catch","state","this","spinner","errorMessage","content","onClick","mjolnir","Component","View","homepage","addClass","indexOf","length","substr","CharList","onRequest","onCharactersLoaded","onCharactersError","newCharacters","ended","characters","spinLoading","charactersEnded","onLoadingMore","alert","renderContent","char","imgStyle","onSelectChar","totalCharacters","_totalCharacters","disabled","Skeleton","CharInfo","onCharLoaded","onCharLoading","charId","updateCharacter","prevProps","skeleton","item","resourceURI","ErrorBoundary","errorInfo","children","App","selectedID","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.10e25fc7.chunk.js","sourcesContent":["import './appHeader.scss';\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"#\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li><a href=\"#\">Characters</a></li>\n                    /\n                    <li><a href=\"#\">Comics</a></li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","class MarvelService{\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=780c01d76ae0f35fbbd2cc072d73747a';\r\n    _baseOffsetCharacters = 210;\r\n    _totalCgaracters = 1559;\r\n\r\n    getResoureceByUrl = async (url) => {\r\n        let resourse = await fetch(url);\r\n\r\n        if (!resourse.ok){\r\n            throw new Error(`Could not fetch the url ${url} error status ${resourse.status}`)\r\n        }\r\n        return await resourse.json();\r\n    }\r\n\r\n    getCharacters = async (offset = this._baseOffsetCharacters) => {\r\n        const res = await this.getResoureceByUrl(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacterResourse);\r\n    }\r\n\r\n    getCharacterById = async (id) => {\r\n        const res = await this.getResoureceByUrl(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacterResourse(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacterResourse = (character) => {\r\n        return {\r\n            id: character.id,\r\n            name: character.name,\r\n            description: character.description,\r\n            thumbnail: `${ character.thumbnail.path }.${ character.thumbnail.extension }`,\r\n            homeoage: character.urls[0].url,\r\n            wiki: character.urls[1].url,\r\n            comics: character.comics.items,\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/loading.d3fbaf2b.gif\";","import src from './loading.gif';\r\nimport './spinner.scss';\r\n\r\nconst Spinner = (style) => {\r\n    const {inlineStyles} = style;\r\n    return (\r\n        <div className='spinner' style={inlineStyles}>\r\n            <img src={src} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.de828221.gif\";","import img from './error.gif';\r\nimport './error.scss';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <div className='error'>\r\n            <img src={img} alt='Error'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","import './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass RandomChar extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            character: {\n                name: null,\n                description: null,\n                thumbnail: null,\n                homeoage: null,\n                wiki: null,\n            },\n            loading: true,\n            error: false,\n        }\n    }\n\n    marvelServices = new MarvelService();\n\n    componentDidMount(){\n        this.updateCharecter();\n    }\n\n    onCharacterLoaded = (character) => {\n        this.setState({\n            character,\n            loading: false,\n        });\n    }\n\n    onError = (error) => {\n        this.setState({\n            error: true,\n            loading: false,\n        });\n    }\n\n    updateCharecter = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\n        this.marvelServices.\n            getCharacterById(id)\n                .then(this.onCharacterLoaded)\n                .catch(this.onError);\n        this.setState({\n            loading: true,\n            error: false,\n        })\n    }\n\n    render(){\n        const { character, loading, error } = this.state;\n        const spinner = loading ? <Spinner /> : null;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const content = (!loading && !error) ? <View character={character} /> : null;\n\n        return (\n            <div className=\"randomchar\">\n                {spinner}\n                {errorMessage}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!<br/>\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">\n                        Or choose another one\n                    </p>\n                    <button className=\"button button__main\" onClick={this.updateCharecter}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = ({character}) => {\n    const {name, description, thumbnail, homepage, wiki} = character;\n\n    const addClass = thumbnail.indexOf('not_available') > 0 ? ' contain' : ' cover';\n\n    return (\n        <div className=\"randomchar__block\">\n            <img src={thumbnail} alt=\"Random character\" className={\"randomchar__img\" + addClass}/>\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{name}</p>\n                <p className=\"randomchar__descr\">{description ? \n                description.length < 190 ? description : description.substr(0,187) + '...'\n                : 'Описание данного персонажа отсутствует'}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomChar;","import './charList.scss';\nimport abyss from '../../resources/img/abyss.jpg';\nimport { Component } from 'react';\nimport MarvelService from '../../services/MarvelService';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharList extends Component{\n    constructor(props){\n        super(props);\n        this.marvelServices = new MarvelService();\n        this.state = {\n            characters: [],\n            loading: true,\n            error: false,\n            spinLoading: false,\n            charactersEnded: false,\n            offset: this.marvelServices._baseOffsetCharacters,\n            totalCharacters: this.marvelServices._totalCharacters,\n        };\n    }\n\n    componentDidMount(){\n        this.onRequest();\n    }\n\n    onRequest = (offset) => {\n        this.marvelServices.getCharacters(offset)\n            .then(this.onCharactersLoaded)\n            .catch(this.onCharactersError)\n    }\n\n    onCharactersLoaded = (newCharacters) => {\n        let ended = false;\n        if (newCharacters < 9){\n            ended = true;\n        }\n\n        this.setState(({characters,offset}) => {\n            return {\n                characters: [...characters, ...newCharacters],\n                loading: false,\n                error: false,\n                spinLoading: false,\n                charactersEnded: ended,\n                offset: offset + 9,\n            }\n        });\n    }\n\n    onLoadingMore = () => {\n        const {offset} = this.state;\n\n        this.setState({spinLoading:true});\n        this.onRequest(offset);\n    }\n\n    onCharactersError = () => {\n        this.setState({\n            loading: false,\n            error: true,\n        });\n        alert('error')\n    }\n\n    renderContent = (characters) => {\n        const content = characters.map(char => {\n            let imgStyle = {'objectFit' : 'cover'};\n            if (char.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = {'objectFit' : 'unset'};\n            }\n\n            return(\n                <li \n                    key={char.id}\n                    className=\"char__item\"\n                    onClick={() => this.props.onSelectChar(char.id)}>\n                        <img src={char.thumbnail} alt={char.name} style={imgStyle}/>\n                        <div className=\"char__name\">{char.name}</div>\n                </li>\n            )\n        });\n        return content;\n    }\n\n    render(){\n        const { characters, loading, error, spinLoading, charactersEnded } = this.state;\n        const inlineStyles = {\n            'gridColumn': '2',\n        }\n        const spinner = loading ? <Spinner inlineStyles={inlineStyles}/> : null;\n        const errorMessage = error ? <ErrorMessage /> : null;\n        const content = (!loading && !errorMessage) ? this.renderContent(characters) : null;\n\n        return (\n            <div className=\"char__list\">\n                <ul className=\"char__grid\">\n                    {spinner}\n                    {errorMessage}\n                    {content}\n                </ul>\n                {\n                    (spinLoading && !charactersEnded) ? <Spinner inlineStyles={{'marginTop':'50px'}} /> :\n                    (!spinLoading && !charactersEnded) ? (\n                        <button\n                            onClick={() => this.onLoadingMore()}\n                            disabled={spinLoading}\n                            className=\"button button__main button__long\">\n                            <div className=\"inner\">load more</div>\n                        </button>\n                    ) : null\n                }\n                \n            </div>\n        )\n    }\n}\n\nexport default CharList;","export default __webpack_public_path__ + \"static/media/abyss.93d211d3.jpg\";","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","export default __webpack_public_path__ + \"static/media/thor.533e3a5e.jpeg\";","import './charInfo.scss';\nimport thor from '../../resources/img/thor.jpeg';\nimport { Component } from 'react';\n\nimport MarvelService from '../../services/MarvelService';\nimport Skeleton from '../skeleton/Skeleton';\nimport Spinner from '../spinner/Spinner';\nimport ErrorMessage from '../errorMessage/ErrorMessage';\n\nclass CharInfo extends Component{\n    constructor(props){\n        super(props);\n        this.state = {\n            character: null,\n            loading: false,\n            error: false,\n        }\n    }\n\n    marvelServices = new MarvelService();\n\n    componentDidMount(){\n        const { charId } = this.props;\n        this.updateCharacter(charId);\n    }\n\n    componentDidUpdate(prevProps){\n        const { charId } = this.props;\n        if (prevProps.charId !== charId){\n            this.updateCharacter(charId);\n        }\n    }\n\n    updateCharacter(id){\n        if (!id) {\n            return\n        }\n        \n        this.onCharLoading();\n\n        this.marvelServices.getCharacterById(id)\n            .then(this.onCharLoaded)\n            .catch(this.onError)\n    }\n\n    onCharLoaded = (char) => {\n        this.setState({\n            character: char,\n            loading: false,\n        });\n    }\n\n    onError = () => {\n        this.setState({\n            error: true,\n            loading: false,\n        });\n    }\n\n    onCharLoading = () => {\n        this.setState({loading:true});\n    }\n\n    render(){\n        const {loading, error, character} = this.state;\n        const skeleton = (!loading && !error && !character) ? <Skeleton /> : null;\n        const spinner = (loading) ? <Spinner /> : null;\n        const errorMessage = (!loading && !character && !skeleton) ? <ErrorMessage /> : null;\n        const content = (!loading && !error && character) ? <View char={character} /> : null;\n\n        return (\n            <div className=\"char__info\">\n                {skeleton}\n                {spinner}\n                {errorMessage}\n                {content}\n            </div>\n        )\n    }\n}\n\nconst View = ({char}) => {\n    const { name, thumbnail, description, homepage, wiki, comics } = char;\n    let imgStyle = {'objectFit' : 'cover'};\n\n    if ( comics.length > 10 ){\n        comics.length = 10;\n    }\n\n    if ( thumbnail.indexOf('image_not_available') !== -1 ){\n        imgStyle = {'objectFit' : 'contain'};\n    }\n\n    return(\n        <>\n            <div className=\"char__basics\">\n                <img src={thumbnail} alt={name} style={imgStyle}/>\n                <div>\n                    <div className=\"char__info-name\">{name}</div>\n                    <div className=\"char__btns\">\n                        <a href={homepage} className=\"button button__main\">\n                            <div className=\"inner\">homepage</div>\n                        </a>\n                        <a href={wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n            <div className=\"char__descr\">{description}</div>\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {comics.length > 0 ? null : 'С этим персонажем пока нет ни одного коммикса'}\n                {comics.map((item, id) => {\n                    return (\n                        <li key={id} className=\"char__comics-item\">\n                            <a href={item.resourceURI}>{item.name}</a>\n                        </li>\n                    )\n                })}\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from \"react\";\r\nimport ErrorMessage from \"../errorMessage/ErrorMessage\";\r\n\r\nclass ErrorBoundary extends Component{\r\n    state  = {\r\n        error: false,\r\n    }\r\n\r\n    componentDidCatch(error,errorInfo){\r\n        this.setState({\r\n            error: true\r\n        });\r\n    }\r\n\r\n    render(){\r\n        const {error} = this.state;\r\n\r\n        if (error){\r\n            return <ErrorMessage />\r\n        } else{\r\n            return this.props.children;\r\n        }\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import AppHeader from \"../appHeader/AppHeader\";\nimport RandomChar from \"../randomChar/RandomChar\";\nimport CharList from \"../charList/CharList\";\nimport CharInfo from \"../charInfo/CharInfo\";\n\nimport decoration from '../../resources/img/vision.png';\nimport { Component } from \"react\";\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\n\nclass App extends Component {\n    state = {\n        selectedID: null,\n    };\n\n    onSelectChar = (id) => {\n        this.setState({\n            selectedID: id \n        });\n    }\n\n    render(){\n        return (\n            <div className=\"app\">\n                <AppHeader/>\n                <main>\n                    <ErrorBoundary>\n                        <RandomChar/>\n                    </ErrorBoundary>\n                    <div className=\"char__content\">\n                        <ErrorBoundary>\n                            <CharList onSelectChar={this.onSelectChar}/>\n                        </ErrorBoundary>\n                        <ErrorBoundary>\n                            <CharInfo charId={this.state.selectedID}/>\n                        </ErrorBoundary>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport './style/style.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}